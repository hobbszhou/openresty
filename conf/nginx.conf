#user  nobody;
worker_processes  1;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    init_by_lua '
        redis = require "resty.redis"
        numbers = {["0"]="39.98.55.170",["1"]="10.0.0.248"}
    ';    

    server {
        listen       8080;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /echo {
            default_type text/plain;
            echo hello lua;
        }

        location /test {
            default_type text_plain;
            content_by_lua 'ngx.say("Hi lile")';
        }
        location /re {
            default_type text_plain;
            content_by_lua '
                local headers = ngx.req.get_headers()
                local ip = headers["X-REAL-IP"] or headers["X_FORWARDED_FOR"] or ngx.var.remote_addr or "0.0.0.0"
                ngx.say(ip.."#"..os.time().."000")
        ';
        }

        location /test2 {
            #default_type application/json;
            default_type text_plain;
            set $backend '';
            content_by_lua_file /home/www/conf/test1.lua;

        }
        # 接收请求  wget --post-data 'a=1&b=2' 'http://127.0.0.1:8080/lua_request/1/2?a=3&b=4' -O -
        location ~ /lua_request/(\d+)/(\d+) {  
            #设置nginx变量  
            set $a $1;   
            set $b $host;  
            default_type "text/html";  
            #nginx内容处理  
            content_by_lua_file /home/www/conf/test_request.lua;  
            #内容体处理完成后调用  
            echo_after_body "ngx.var.b $b";  
        } 
        # 响应输出 
        location /lua_response_1 {  
            default_type "text/html";  
            content_by_lua_file /home/www/conf/test_response_1.lua;  
        }  
        # 重定向  到百度
        location /lua_response_2 {  
            default_type "text/html";  
            content_by_lua_file /home/www/conf/test_response_2.lua;  
        }  
        # 其他API 1
        location /lua_other {  
            default_type "text/html";  
            content_by_lua_file /home/www/conf/test_other.lua;  
        }  

        # #共享全局变量，在所有worker间共享  
        # lua_shared_dict shared_data 1m;  
        location /lua_shared_dict {  
            default_type "text/html";  
            content_by_lua_file /home/www/conf/test_lua_shared_dict.lua;  
        }  
        # set_by_lua  获取返回值   http://xxx.xxxxx.xx.xxx/lua_set_1?i=1&j=10
        location /lua_set_1 {  
            default_type "text/html";  
            set_by_lua_file $num /home/www/conf/test_set_1.lua;  
            echo $num;  
        }  
        # rewrite_by_lua
        location /lua_rewrite_1 {  
            default_type "text/html";  
            rewrite_by_lua_file /home/www/conf/test_rewrite_1.lua;  
            echo "no rewrite";  
        }  
        location /lua_rewrite_2 {  
            default_type "text/html";  
            rewrite_by_lua_file /home/www/conf/test_rewrite_2.lua;  
            echo "rewrite2 uri : $uri, a : $arg_a";  
        }  
        location /lua_rewrite_3 {  
            default_type "text/html";  
            rewrite_by_lua_file /home/www/conf/test_rewrite_3.lua;  
            echo "rewrite3 uri : $uri";  
        } 
        # access_by_lua  用于访问控制，比如我们只允许内网ip访问，可以使用如下形式
        location /lua_access {  
            default_type "text/html";  
            access_by_lua_file /home/www/conf/test_access.lua;  
            echo "access";  
        }  
        #设置cookie
        location /test_set_cookie {  
            default_type "text/html";  
            content_by_lua_file /home/www/conf/test_set_cookie.lua;  
        }  
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}